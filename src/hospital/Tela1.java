package hospital;

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Gustavo Gonçalves, 2º INFO - ETEC Poá
 */

public class Tela1 extends javax.swing.JFrame {

    public Tela1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelPrincipal = new javax.swing.JPanel();
        btnEnviar = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        lblNumLeito = new javax.swing.JLabel();
        lblIdade = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblTipoSanguineo = new javax.swing.JLabel();
        lblPressArterial = new javax.swing.JLabel();
        lblBatimentos = new javax.swing.JLabel();
        lblTemperatura = new javax.swing.JLabel();
        lblPrincipal = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtIdade = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter idade = new javax.swing.text.MaskFormatter("##");
            idade.setValidCharacters("0123456789");
            txtIdade = new javax.swing.JFormattedTextField(idade);
        }
        catch (Exception e){
        }
        txtSecso = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter sexo = new javax.swing.text.MaskFormatter("U");
            sexo.setValidCharacters("MmFf");
            txtSecso = new javax.swing.JFormattedTextField(sexo);
        }
        catch (Exception e){
        }
        txtNum = new javax.swing.JTextField();
        txtTemperatura = new javax.swing.JTextField();
        txtBatimentos = new javax.swing.JTextField();
        txtPressArterial = new javax.swing.JTextField();
        txtTipoSanguineo = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter cpf = new javax.swing.text.MaskFormatter("###.###.###-##");
            cpf.setValidCharacters("0123456789");
            txtCPF = new javax.swing.JFormattedTextField(cpf);
        }
        catch (Exception e){
        }
        lblCPF = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        painelPrincipal.setBackground(new java.awt.Color(102, 204, 255));
        painelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, java.awt.Color.black));
        painelPrincipal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnEnviar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnEnviar.setText("Enviar");
        btnEnviar.setBorder(null);
        btnEnviar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        lblNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNome.setForeground(new java.awt.Color(0, 0, 0));
        lblNome.setText("Nome");

        lblNumLeito.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNumLeito.setForeground(new java.awt.Color(0, 0, 0));
        lblNumLeito.setText("Nº do Leito");

        lblIdade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblIdade.setForeground(new java.awt.Color(0, 0, 0));
        lblIdade.setText("Idade");

        lblSexo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSexo.setForeground(new java.awt.Color(0, 0, 0));
        lblSexo.setText("Sexo");

        lblTipoSanguineo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTipoSanguineo.setForeground(new java.awt.Color(0, 0, 0));
        lblTipoSanguineo.setText("Tipo Sanguíneo");

        lblPressArterial.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPressArterial.setForeground(new java.awt.Color(0, 0, 0));
        lblPressArterial.setText("Pressão Arterial (mmHg)");

        lblBatimentos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblBatimentos.setForeground(new java.awt.Color(0, 0, 0));
        lblBatimentos.setText("BPM");

        lblTemperatura.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTemperatura.setForeground(new java.awt.Color(0, 0, 0));
        lblTemperatura.setText("Temperatura (ºC)");

        lblPrincipal.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblPrincipal.setForeground(new java.awt.Color(0, 0, 0));
        lblPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrincipal.setText("Prontuário Médico");

        txtNome.setBackground(new java.awt.Color(102, 204, 255));
        txtNome.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtNome.setToolTipText("Nome");
        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNome.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });

        txtIdade.setBackground(new java.awt.Color(102, 204, 255));
        txtIdade.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtIdade.setToolTipText("Idade");
        txtIdade.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIdade.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtIdade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdadeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdadeKeyTyped(evt);
            }
        });

        txtSecso.setBackground(new java.awt.Color(102, 204, 255));
        txtSecso.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtSecso.setToolTipText("Sexo");
        txtSecso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSecso.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtSecso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSecsoActionPerformed(evt);
            }
        });
        txtSecso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSecsoKeyTyped(evt);
            }
        });

        txtNum.setBackground(new java.awt.Color(102, 204, 255));
        txtNum.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtNum.setToolTipText("Número do Leito");
        txtNum.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNum.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumKeyTyped(evt);
            }
        });

        txtTemperatura.setBackground(new java.awt.Color(102, 204, 255));
        txtTemperatura.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtTemperatura.setToolTipText("Temperatura");
        txtTemperatura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTemperatura.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtTemperatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTemperaturaKeyTyped(evt);
            }
        });

        txtBatimentos.setBackground(new java.awt.Color(102, 204, 255));
        txtBatimentos.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtBatimentos.setToolTipText("Batimentos Cardíacos");
        txtBatimentos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtBatimentos.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtBatimentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBatimentosKeyTyped(evt);
            }
        });

        txtPressArterial.setBackground(new java.awt.Color(102, 204, 255));
        txtPressArterial.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtPressArterial.setToolTipText("Pressão Arterial");
        txtPressArterial.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPressArterial.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtPressArterial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPressArterialKeyTyped(evt);
            }
        });

        txtTipoSanguineo.setBackground(new java.awt.Color(102, 204, 255));
        txtTipoSanguineo.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtTipoSanguineo.setToolTipText("Tipo Sanguíneo");
        txtTipoSanguineo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTipoSanguineo.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtTipoSanguineo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTipoSanguineoKeyTyped(evt);
            }
        });

        txtCPF.setBackground(new java.awt.Color(102, 204, 255));
        txtCPF.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtCPF.setToolTipText("CPF");
        txtCPF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCPF.setSelectedTextColor(new java.awt.Color(153, 255, 255));
        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCPFKeyTyped(evt);
            }
        });

        lblCPF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCPF.setForeground(new java.awt.Color(0, 0, 0));
        lblCPF.setText("CPF");

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBatimentos)
                            .addComponent(lblTemperatura))
                        .addGap(92, 92, 92)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTemperatura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBatimentos)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(lblIdade)
                            .addComponent(lblSexo)
                            .addComponent(lblNumLeito)
                            .addComponent(lblCPF))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCPF, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNum)
                            .addComponent(txtIdade)
                            .addComponent(txtNome)
                            .addComponent(txtSecso, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTipoSanguineo)
                            .addComponent(lblPressArterial))
                        .addGap(49, 49, 49)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPressArterial)
                            .addComponent(txtTipoSanguineo))))
                .addContainerGap())
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblPrincipal)
                .addGap(38, 38, 38)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPF))
                .addGap(5, 5, 5)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdade)
                    .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumLeito)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSexo)
                    .addComponent(txtSecso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTipoSanguineo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoSanguineo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPressArterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPressArterial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBatimentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBatimentos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperatura)
                    .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdadeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdadeKeyPressed

    private void txtIdadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdadeKeyTyped

    }//GEN-LAST:event_txtIdadeKeyTyped

    private void txtNumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumKeyTyped
       //Só aceita números no jTextField
        String numeros = "0987654321";
        if(!numeros.contains(evt.getKeyChar()+"")){ evt.consume(); } 
        //Se o caractere digitado não for um contido na String "numeros", o caractere é removido através do método consume.
    }//GEN-LAST:event_txtNumKeyTyped

    private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
        //Só aceita letras no jTextField
        String numeros = "abcdefghijklmnopqrstuvxwzABCDEFGHIJKLMNOPQRSTUVWXZ çÇ";
        if(!numeros.contains(evt.getKeyChar()+"")){ evt.consume(); } 
    }//GEN-LAST:event_txtNomeKeyTyped

    private void txtTipoSanguineoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTipoSanguineoKeyTyped
        //Só aceita A, B, O, + -
        String numeros = "aAbBoO-+";
        if(!numeros.contains(evt.getKeyChar()+"")){ evt.consume(); } 
    }//GEN-LAST:event_txtTipoSanguineoKeyTyped

    private void txtPressArterialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPressArterialKeyTyped
        //Só aceita números e ponto no jTextField
        String numeros = "0987654321./";
        if(!numeros.contains(evt.getKeyChar()+"")){ evt.consume(); } 
        //Se o caractere digitado não for um contido na String "numeros", o caractere é removido através do método consume.
    }//GEN-LAST:event_txtPressArterialKeyTyped

    private void txtBatimentosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBatimentosKeyTyped
        //Só aceita números e ponto no jTextField 
        String numeros = "0987654321.";
        if(!numeros.contains(evt.getKeyChar()+"")){ evt.consume(); } 
        //Se o caractere digitado não for um contido na String "numeros", o caractere é removido através do método consume.
    }//GEN-LAST:event_txtBatimentosKeyTyped

    private void txtTemperaturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemperaturaKeyTyped
        //Só aceita números e hífen no jTextField
        String numeros = "-0987654321.";
        if(!numeros.contains(evt.getKeyChar()+"")){ evt.consume(); }
        //Se o caractere digitado não for um contido na String "numeros", o caractere é removido através do método consume.
    }//GEN-LAST:event_txtTemperaturaKeyTyped

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        //Atributos
        String pressArterial;
        int batimentos;
        float tempPaciente;
        String nomePaciente;
        int numLeito;
        String tipoSanguineo;
        String sexo;
        int idade;
        String CPF;
        
        pressArterial = txtPressArterial.getText();
        batimentos = Integer.parseInt(txtBatimentos.getText());
        tempPaciente = Float.parseFloat(txtTemperatura.getText());
        nomePaciente = txtNome.getText();
        numLeito = Integer.parseInt(txtNum.getText());
        tipoSanguineo = txtTipoSanguineo.getText();
        sexo = txtSecso.getText();
        idade = Integer.parseInt(txtIdade.getText());
        CPF = txtCPF.getText();
        //
        
        Prontuario prontuario = new Prontuario(); //Instanciando da classe Prontuario
        prontuario.cadastrar(pressArterial, batimentos, tempPaciente, nomePaciente, numLeito, tipoSanguineo, sexo, idade, CPF);
        
        JOptionPane.showMessageDialog(null, "Paciente cadastrado com sucesso!");
        
        String msgfinal = ""
                + "Nome: "+prontuario.getNome()+"\r\n"
                + "CPF: "+prontuario.getCPF()+"\r\n"
                + "Idade: "+prontuario.getIdade()+"\r\n"
                + "Nº do Leito: "+prontuario.getNumLeito()+"\r\n"
                + "Sexo: "+prontuario.getSexo().toUpperCase()+"\r\n"
                + "Tipo Sanguíneo: "+prontuario.getTipoSanguineo().toUpperCase()+"\r\n"
                + "Pressão Arterial: "+prontuario.getPress()+" mmHg\r\n"
                + "Batimentos Cardíacos: "+prontuario.getBatimentos()+" BPM\r\n"
                + "Temperatura: "+prontuario.getTemperatura()+" ºC";

        JOptionPane.showMessageDialog(null, msgfinal);
        
        //Limpar as caixas de textos.
        txtPressArterial.setText("");
        txtBatimentos.setText("");
        txtTemperatura.setText("");
        txtNome.setText("");
        txtNum.setText("");
        txtTipoSanguineo.setText("");
        txtSecso.setText("");
        txtIdade.setText("");
        txtCPF.setText("");
        //
        
        //Criar e Escrever arquivo
        FileWriter arquivo;
        try {
            //Gerar data e hora
            Date date = new Date();
            SimpleDateFormat ft = new SimpleDateFormat ("dd.MM.yyyy 'ás' HH'h'mm'm'"); //Ex: "04.05.2018 ás 07h45m"
            //
            String msgNum1 = "Prontuário médico do paciente: " +prontuario.getNome()+ "\r\n\r\n"; //Mensagem 1
            String msgNum2 = "\r\n\r\nData de acesso: " +ft.format(date)+ "\r\n\r\n"; //Mensagem 2
            String nomeDoArquivo = ft.format(date); //Nome do arquivo (é o dia/mes/ano e o horário atual.txt)

            File diretorio = new File(System.getProperty("user.home") + "/Historico"); //Instancia o objeto diretorio com caminho pro desktop/historico 
            
            if (!diretorio.exists()) { diretorio.mkdir(); } //Se o diretório não existir, ele cria. 
            
            //Escrever Arquivo
            arquivo = new FileWriter(new File(System.getProperty("user.home") + "/Historico/"+nomeDoArquivo+".txt")); //Instancia o objeto arquivo com caminho pro desktop/historico/nomedoarquivo.txt
            arquivo.write(msgNum1+msgfinal+msgNum2);
            //
            
            //Abrir Arquivo
            java.awt.Desktop.getDesktop().open( new File( System.getProperty("user.home") + "/Historico/"+nomeDoArquivo+".txt" ) );
            //
            arquivo.close(); //Fecha o arquivo.
            
        } catch (IOException e)
        { 
            e.printStackTrace(); 
        } //Escrever o erro no console
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void txtSecsoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSecsoKeyTyped

    }//GEN-LAST:event_txtSecsoKeyTyped

    private void txtSecsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSecsoActionPerformed

    }//GEN-LAST:event_txtSecsoActionPerformed

    private void txtCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JLabel lblBatimentos;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblIdade;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNumLeito;
    private javax.swing.JLabel lblPressArterial;
    private javax.swing.JLabel lblPrincipal;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTemperatura;
    private javax.swing.JLabel lblTipoSanguineo;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JTextField txtBatimentos;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtIdade;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtPressArterial;
    private javax.swing.JTextField txtSecso;
    private javax.swing.JTextField txtTemperatura;
    private javax.swing.JTextField txtTipoSanguineo;
    // End of variables declaration//GEN-END:variables
}
